# bl_1s17_cov.sdl
# Author: Jacob Preseau
# Last Modified: December 14 2020
# Description:
# Coverage file for bl_1s17.

extend dut.bl_1s17:

    event bl_start is @drive_ahead_s.after_implicits
    event bl_end is @drive_ahead_s.end
    
    # Lanes
    !npc_lane_start := sample(npc.state.road_position.lane_index, @bl_start) with:
        cover(it,
            text: "Index of npc's starting lane, from 2 to 3",
            range: [2..3]
        )
    
    !npc_lane_end := sample(npc.state.road_position.lane_index, @bl_end) with:
        cover(it,
            text: "Index of npc's ending lane, from 1 to 2",
            range: [1..2]
        )

    # Distances between cars
    !dut_npc_dist_start := sample(map.distance_between_locations(dut.car.state.location, npc.state.location), @bl_start) with:
        cover(it,
            text: "Distance between dut and npc at the start in feet",
            unit: feet,
            range: [-50..10],
            every: 10
        )
    
    !dut_npc_dist_end := sample(map.distance_between_locations(dut.car.state.location, npc.state.location), @bl_end) with:
        cover(it,
            text: "Distance between dut and npc at the end in feet",
            unit: feet,
            range: [10..50],
            every: 10
        )
    
    # Speeds
    !dut_speed_start := sample(dut.car.state.speed, @bl_start) with:
        cover(it,
            text: "The speed of dut at the start in mph",
            unit: mph,
            range: [0..40],
            every: 5
        )
    
    !dut_speed_end := sample(dut.car.state.speed, @bl_end) with:
        cover(it,
            text: "The speed of dut at the end in mph",
            unit: mph,
            range: [0..40],
            every: 5
        )
    
    !npc_speed_start := sample(npc.state.speed, @bl_start) with:
        cover(it,
            text: "The speed of dut at the start in mph",
            unit: mph,
            range: [0..50],
            every: 5
        )
    
    !npc_speed_end := sample(npc.state.speed, @bl_end) with:
        cover(it,
            text: "The speed of dut at the end in mph",
            unit: mph,
            range: [0..70],
            every: 5
        )
    
    # Collision
    !dut_collision := sample(true, @dut.car.collision) with:
        cover(it, text: "Whether dut collided")
