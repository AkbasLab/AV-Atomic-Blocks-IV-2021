# @author [Jacob Preseau - preseauj@my.erau.edu]
# @source ["AV_ValidationVerification"]
# bl_2s13, 
# Scenario.
# @version [1.00]
# @modified [02.09.2021, Jacob Preseau, Created.]

scenario dut.bl_2s13:
    npc1: car
    npc2: car
    
    p_dur: time
    p_dut_speed_start: speed
    
    p_npc1_speed_gt_dut_start : speed
    p_npc1_dist_gt_dut_start : distance
    p_npc1_dist_gt_dut_end : distance
    
    p_npc2_speed_gt_dut_start : speed
    p_npc2_dist_gt_dut_start : distance
    p_npc2_dist_gt_dut_end : distance
    
    do npc1_change_lane_s: parallel():
        dut.car.drive() with:
            speed(p_dut_speed_start, at: start)
        
        npc1.drive(duration: p_dur) with:
            lane(side_of: dut.car, at: start)
            lane(same_as: dut.car, at: end)
            speed(p_npc1_speed_gt_dut_start, faster_than: dut.car, at: start)
            position(p_npc1_dist_gt_dut_start, ahead_of: dut.car, at: start)
            position(p_npc1_dist_gt_dut_end, ahead_of: dut.car, at: end)
            avoid_collisions(false)
        
        npc2.drive(duration: p_dur) with:
            lane(same_as: dut.car, at: start)
            lane(same_as: dut.car, at: end)
            speed(p_npc2_speed_gt_dut_start, faster_than: dut.car, at: start)
            position(p_npc2_dist_gt_dut_start, ahead_of: dut.car, at: start)
            position(p_npc2_dist_gt_dut_end, ahead_of: dut.car, at: end)
            avoid_collisions(false)
